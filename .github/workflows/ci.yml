name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-backend:
    name: 🐍 Lint & Type-Check Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run flake8
        run: flake8 backend

  test-backend:
    name: ✅ Test Backend
    runs-on: ubuntu-latest
    needs: lint-backend
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
      redis:
        image: redis:7
        ports:
          - 6379:6379
      minio:
        image: minio/minio:latest
        env:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: minio123
        ports:
          - 9000:9000

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dev dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install pytest
      - name: Run pytest
        run: |
          cd backend
          pytest --maxfail=1 --disable-warnings -q

  lint-frontend:
    name: 🎨 Lint Frontend
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      - name: Run ESLint
        run: |
          cd frontend
          npx eslint .

  test-frontend:
    name: 🚀 Test Frontend
    runs-on: ubuntu-latest
    needs: lint-frontend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install & Test
        run: |
          cd frontend
          npm ci
          npm test -- --watchAll=false --ci

  build-images:
    name: 📦 Build Docker Images
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build backend image
        run: |
          docker build -t ai-screening-platform-backend:ci ./backend
      - name: Build frontend image
        run: |
          docker build -t ai-screening-platform-frontend:ci ./frontend
